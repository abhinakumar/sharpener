const blogs = [];

function createPost(title) {
    return new Promise((resolve, reject) => {
        setTimeout(() => {
            blogs.push({ title });
            resolve({ title });
        }, 1000);
    });
}

function updateLastUserActivityTime() {
    return new Promise((resolve, reject) => {
        setTimeout(() => {
            const lastActivityTime = new Date();
            resolve(lastActivityTime);
        }, 1000);
    });
}

function deleteLastPost() {
    return new Promise((resolve, reject) => {
        setTimeout(() => {
            if (blogs.length === 0) {
                reject(new Error("No post to delete."));
            } else {
                const deletedPost = blogs.pop();
                resolve(deletedPost);
            }
        }, 1000);
    });
}

async function createAndDeletePost(title) {
    try {
        const post = await createPost(title);
        console.log(`Post created: ${post.title}`);

        const lastActivityTime = await updateLastUserActivityTime();
        console.log(`Last Activity Time: ${lastActivityTime}`);

        const deletedPost = await deleteLastPost();
        console.log(`Deleted post: ${deletedPost.title}`);

        console.log("Current set of Posts:", blogs);
    } catch (error) {
        console.error(error.message);
    }
}

createAndDeletePost("Post1");
createAndDeletePost("Post2");
createAndDeletePost("Post3");
